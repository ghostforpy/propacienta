version: '3'

volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}
  production_traefik: {}
  production_nginx_media: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    image: propacienta_production_django
    volumes:
      - production_nginx_media:/app/propacienta/media:z
    
    depends_on:
      # - pgbouncer
      - postgres
      - redis
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: propacienta_production_postgres
    volumes:
      - production_postgres_data:/var/lib/postgresql/data:Z
      - production_postgres_data_backups:/backups:z
    env_file:
      - ./.envs/.production/.postgres
  
  # pgbouncer:
  #   image: edoburu/pgbouncer
  #   depends_on:
  #     - postgres
  #   env_file:
  #     - ./.envs/.production/.pgbouncer
  
  traefik:
    build:
      context: .
      dockerfile: ./compose/production/traefik/Dockerfile
    image: propacienta_production_traefik
    depends_on:
      - django
    volumes:
      - production_traefik:/etc/traefik/acme:z
    ports:
      - "0.0.0.0:80:80"
      - "0.0.0.0:443:443"
      - "0.0.0.0:5555:5555"

  redis:
    image: redis:6

  celeryworker:
    <<: *django
    image: propacienta_production_celeryworker
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: propacienta_production_celerybeat
    command: /start-celerybeat

  flower:
    <<: *django
    image: propacienta_production_flower
    command: /start-flower

  # nginx-media:
  #   image: "nginx:latest"
  #   depends_on:
  #     - django
  #   volumes:
  #     - production_nginx_media:/usr/share/nginx/html/media:ro

  coturn:
    image: instrumentisto/coturn:4.5.2
    network_mode: host
    ports:
      - "3478:3478"
      # - "80:80"
      # - "8080:8080"
      - "49152-65535:49152-65535"
    volumes:
      - ./compose/production/coturn/coturn.conf:/etc/coturn/turnserver.conf

  reverse_proxy:
    # image: nginx:latest
    build:
      context: .
      dockerfile: ./compose/production/nginx/Dockerfile
    depends_on:
      - django
    volumes:
      # - ./compose/production/nginx/nginx.conf:/etc/nginx/nginx.conf
      # - ./compose/local/nginx/nginx-selfsigned.crt:/etc/nginx/ssl/certs/localhost.crt
      # - ./compose/local/nginx/nginx-selfsigned.key:/etc/ssl/private/localhost.key
      # - ./compose/local/nginx/dhparam.pem:/etc/nginx/ssl/certs/dhparam.pem
      # - ./compose/local/nginx/options-ssl-nginx.conf:/etc/nginx/ssl/options-ssl-nginx.conf
      - ./propacienta/media:/web/media:z
      # - ./frontend/propacienta/dist:/usr/share/nginx/html
    # network_mode: host

          
  # frontend:
  #   build:
  #     context: .
  #     dockerfile: ./frontend/Dockerfile
  #   image: propacienta_frontend
  #   container_name: propacienta_frontend
    # depends_on:
    #   - postgres
    #   - redis
    #   - mailhog
    # volumes:
    #   - ./frontend/propacienta/dist:/app/dist:z
    # env_file:
    #   - ./.envs/.local/.django
    #   - ./.envs/.local/.postgres
    # ports:
    #   - "8000:8000"
    # command: /start